name: linux build 

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, linux]

    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build
      run: |
        rm -rf /build/nzbget
        rm -rf /build/output
        cp -r . /build/nzbget
        cd /build
        docker run -e ALL_ARCHS="i686 x86_64 aarch64 armhf armel" -v /build:/build nzbget-build /build/scripts/build-nzbget-ci.sh

    - name: Rename build artifacts
      if: github.ref_name != 'main'
      run: |
        cd /build/output
        VERSION=$(ls | grep bin-linux.run | cut -d - -f 2)
        NEW_VERSION="$VERSION-testing-$(date '+%Y%m%d')"
        if [ "$GITHUB_REF_NAME" != "develop" ]; then
          NEW_VERSION="$NEW_VERSION-${GITHUB_REF_NAME/\//-}"
        fi
        for FILE in *.run; do
          [ -f $FILE ] || continue
          NEW_FILE=${FILE/$VERSION/$NEW_VERSION}
          mv $FILE $NEW_FILE          
        done

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nzbget-linux-installers
        path: /build/output/*.run
        retention-days: 5

    - name: Cleanup
      run: |
        rm -rf /build/nzbget
        rm -rf /build/output
