#!/bin/bash

### Use PKG_DIR as working directory.
PKG_DIR=/tmp/_spk
rm -rf $PKG_DIR
mkdir -p $PKG_DIR

### get spk packing functions
source /pkgscripts/include/pkg_util.sh

create_package_tgz() {
	
	local package_tgz_dir=/tmp/_package_tgz
	local binary_dir=$package_tgz_dir/usr/local/bin
	
	### clear destination directory
	rm -rf $package_tgz_dir && mkdir -p $package_tgz_dir

	### install needed file into PKG_DIR
	mkdir -p $binary_dir
	cp -av nzbget $binary_dir
	cp -av nzbget.sc $binary_dir
	curl --insecure -o $binary_dir/cacert.pem https://curl.se/ca/cacert.pem

	make install DESTDIR="$package_tgz_dir"

	### create package.tgz $1: source_dir $2: dest_dir
	pkg_make_package $package_tgz_dir $PKG_DIR
}

create_spk(){

	cp -av scripts $PKG_DIR/scripts
	rm -rf $PKG_DIR/scripts/Email
	rm -rf $PKG_DIR/scripts/Logger
	cp -av PACKAGE_ICON*.PNG $PKG_DIR
	cp -av WIZARD_UIFILES $PKG_DIR
	cp -av conf $PKG_DIR

	./INFO.sh > INFO
	cp INFO $PKG_DIR/INFO

	### Create the final spk.
	# pkg_make_spk <source path> <dest path> <spk file name>
	# Please put the result spk into /image/packages
	# spk name functions: pkg_get_spk_name pkg_get_spk_unified_name pkg_get_spk_family_name
	mkdir -p /image/packages
	pkg_make_spk $PKG_DIR "/image/packages" $(pkg_get_spk_family_name)
}

main() {
	create_package_tgz
	create_spk
}

main "$@"
